// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Faculty {
  id          String       @id @default(cuid())
  name        String       @unique
  departments Department[]
  Majors      Major[]
  Student     Student[]
  Lecturer    Lecturer[]
}

model Department {
  id        String     @id @default(cuid())
  name      String
  Faculty   Faculty    @relation(fields: [faculty], references: [id])
  faculty   String // relation scalar field (used in the `@relation` attribute above)
  majors    Major[]
  students  Student[]
  lecturers Lecturer[]
  courses   Course[]
}

model Major {
  id         String     @id @default(cuid())
  name       String
  students   Student?
  Department Department @relation(fields: [department], references: [id])
  department String
  Faculty    Faculty    @relation(fields: [faculty], references: [id])
  faculty    String // relation scalar field (used in the `@relation` attribute above)
  courses    Course[]
}

model Student {
  id         String     @id @default(cuid())
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  email      String     @unique
  firstName  String
  lastName   String
  Major      Major?     @relation(fields: [major], references: [id])
  major      String?
  department String
  Department Department @relation(fields: [department], references: [id])
  Faculty    Faculty    @relation(fields: [faculty], references: [id])
  faculty    String // relation scalar field (used in the `@relation` attribute above)
  level      Int?
  Result     Result[]
}

model Lecturer {
  id         String     @id @default(cuid())
  email      String     @unique
  firstName  String
  lastName   String
  majorId    Int
  title      String
  Department Department @relation(fields: [department], references: [id])
  Faculty    Faculty    @relation(fields: [faculty], references: [id])
  department String
  faculty    String // relation scalar field (used in the `@relation` attribute above)
}

model Course {
  id         String      @id @default(cuid())
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  title      String      @unique
  code       String      @unique
  semester   Int?
  credit     Int
  elective   Boolean     @default(false)
  level      Int?
  Major      Major?      @relation(fields: [major], references: [id])
  major      String?
  Department Department? @relation(fields: [department], references: [id])
  department String?
  Result     Result[]
}

model Result {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  score     Int?
  Course    Course?  @relation(fields: [course], references: [id])
  course    String?
  Student   Student? @relation(fields: [student], references: [id])
  student   String?
}
